var a:array[1..10000] of longint;
    b:array[1..6] of integer;
    n,k,i,j,max:longint;
function nom(q:longint):byte;
begin
  if q div 10=0 then nom:=1
  else if q div 100=0 then  nom:=2
  else if q div 1000=0 then  nom:=3
  else if a[i] div 10000=0 then   nom:=4
  else if a[i] div 100000=0 then  nom:=5
  else  nom:=6;
end;
function prost(y:longint):boolean;
 var r:longint;
 begin
   for r:= 2 to trunc(sqrt(y)) do
     if y mod r=0 then begin prost:=false; exit; end;
   prost:=true;
end;
 procedure poisk(q:longint);
  var p:longint;
 begin
  q:=q+1;
  while not(prost(q)) do inc(q);
    a[i]:=q;
end;
BEGIN
 read(n);
 for i:=1 to n do begin
  read(a[i]);
  if a[i] div 10=0 then inc(b[1])
  else if a[i] div 100=0 then inc(b[2])
  else if a[i] div 1000=0 then inc(b[3])
  else if a[i] div 10000=0 then inc(b[4])
  else if a[i] div 100000=0 then inc(b[5])
  else inc(b[6]);
 end;
 max:=b[1];
 for i:=2 to 6 do
   if b[i]>max then max:=b[i];
 for i:=1 to n do begin
   if nom(a[i])=max then poisk(a[i]);
   write(a[i],' ');
 end;
END.


