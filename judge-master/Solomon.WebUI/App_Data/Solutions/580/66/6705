using System;
using System.Collections.Generic;

namespace viking
{
	class Program
	{
		static void Main()
		{
			int n = int.Parse(Console.ReadLine());
			School[] schools = new School[n];

			for(int i = 0; i < n; i++)
			{
				schools[i] = new School(Console.ReadLine());
			}

			List<long> lst = Otbor(schools);

			if(lst.Count>= 0)
			{
				Console.WriteLine(lst.Count);

				foreach(int item in lst)
				{
					Console.WriteLine(item);
				}
			}

			Console.ReadKey();
		}

		static List<long> Otbor(School[] schools)
		{
			List<long> list = new List<long>();
			int k;
			for(int i = 0; i < schools.Length; i++)
			{
				k = 0;
				for(int j = 0; j < schools.Length; j++)
				{
					if(schools[i].Number == schools[j].Number) k++;
				}

				if(k <= 5 && !list.Contains(schools[i].Number)) list.Add(schools[i].Number);
			}

			return list;
		}
	}

	class School
	{
		private char[] digitsstart = { '1', '2', '3', '4', '5', '6', '7', '8', '9' };
		private char[] digitsend = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' };
		private string name;
		public 	string Name
		{
			get { return this.name; }
			set { this.name = value; }
		}

		private long number;

		public long Number
		{
			get { return this.number; }			
		}

		public School(string name)
		{
			this.name = name;
			long.TryParse(name.Substring(name.IndexOfAny(digitsstart),
			name.LastIndexOfAny(digitsend)-name.IndexOfAny(digitsstart)+1), out this.number);			
		}
		
	}
	
}