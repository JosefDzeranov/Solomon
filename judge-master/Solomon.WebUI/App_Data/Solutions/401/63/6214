//package com.acidka;

public class C {
	public static int[][][] a;
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		try{
			int n, m, max = 1,i,j, length;
			java.util.Scanner s = new java.util.Scanner(System.in);
			n = s.nextInt();
			m = s.nextInt();
			a= new int[n][m][3]; 
			for(i = 0;i < n;i++)
			{
				for(j = 0;j < m;j++)
				{
					a[i][j][0] = s.nextInt();
					a[i][j][1] = 0;
				}
			}
			//long start = System.currentTimeMillis();
			for(int x = 0; x <= 9; x++ )
			for(i = 0;i < n;i++)
			{
				for(j = 0;j < m;j++)
				{
					//a[i][j][2] = find(0, 0, n, m);
					a[i][j][1] = 1;
					a[i][j][2] = 1;
					if(i > 0)
						if(a[i-1][j][0] == a[i][j][0]+1) {length = 1+a[i-1][j][2]; if(length > a[i][j][2]) a[i][j][2] = length;}
					if(j > 0)
						if(a[i][j-1][0] == a[i][j][0]+1) {length = 1+a[i][j-1][2]; if(length > a[i][j][2]) a[i][j][2] = length;}
					if(j < m-1)
						if(a[i][j+1][0] == a[i][j][0]+1) {length = 1+a[i][j+1][2]; if(length > a[i][j][2]) a[i][j][2] = length;}
					if(i < n-1)
						if(a[i+1][j][0] == a[i][j][0]+1) {length = 1+a[i+1][j][2]; if(length > a[i][j][2]) a[i][j][2] = length;}
					if( a[i][j][2] > max ) max = a[i][j][2];
				}
			}
			System.out.println(max);
			//System.out.println(System.currentTimeMillis() - start);
			s.close();
		}
		catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
