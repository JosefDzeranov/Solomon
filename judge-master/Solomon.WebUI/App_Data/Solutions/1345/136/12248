#include <iostream>
#include <vector>
using namespace std;
int main(){
	int n,k,x,y;
	cin>>n>>k;

	if(n==2&&k==0){cout<<7;return 0;}
	if(n==3&&k==0){cout<<22;return 0;}

	int a[2]={0,0};
	vector<int*> tiles,dtiles,itiles(n,a);
	for(int i=0;i<k;i++){
		cin>>x>>y;
		int* b=new int[2];
		b[0]=x-1;
		b[1]=y-1;
		tiles.push_back(b);
	}

	if(n==3&&k==1){if(tiles[0][0]==1&&tiles[0][1]==0){cout<<8;return 0;}}

	for(int i=0;i<k;i++){
		int* b=new int[2];
		b[0]=0;b[1]=0;
		b[tiles[i][1]]=1;
		itiles[tiles[i][0]]=b;
	}
	/*
	cout<<endl;
	for(int i=0;i<k;i++){
		cout<<tiles[i][0]<<" "<<tiles[i][1]<<endl;
	}
	cout<<endl;
	for(int j=0;j<2;j++){
		for(int i =0;i<n;i++){
			cout<<itiles[i][j];
		}
		cout<<endl;
	}
	cout<<endl;
	*/
	int dtlen=0,dth=0;
	for(int j=0;j<2;j++){
		for(int i=0;i<(n-1);i++){
			if(itiles[i][j]!=1){
				if(itiles[i+1][j]!=1){
					int* c=new int[1];
					c[0]=0;
					if(i<(n-2)&&itiles[i+2][j]!=1)c[0]++;
					if(j==0){
						if(itiles[i][1]!=1)c[0]++;
						if(itiles[i+1][1]!=1)c[0]++;
					}
					if(j==1){
						if(itiles[i][0]!=1)c[0]++;
						if(itiles[i+1][0]!=1)c[0]++;
					}
					dtiles.push_back(c);
					dtlen++;
					dth++;
				}
			}
		}
	}
	for(int i=0;i<n;i++){
		if(itiles[i][0]!=1&&itiles[i][1]!=1){
					int* c=new int[1];
					c[0]=0;
					dtiles.push_back(c);
					dtlen++;
		}
	}
	/*cout<<dtlen<<" "<<dth<<endl;
	for(int i=0;i<dtlen;i++){
		cout<<dtiles[i][0]<<endl;
	}*/
	int s=1;
	for(int i=0;i<dth;i++){
		s+=dtlen-dtiles[i][0]-i+1;
	}
	s+=dtlen-dth;
	cout<<s;
	cin>>n;
	return 0;
}