var i,n,s:integer;
r,min,k:real;
prices: array[1..100] of integer;
bin_code,min_bc: array[1..100] of boolean;

procedure b_inc;
var i:integer;
begin
  i:=0;
  repeat
    inc(i);
    bin_code[i]:=not bin_code[i];
  until (bin_code[i]=true);
end;

function b_full:boolean;
var i:integer;
res:boolean;
begin
  res:=true;   
  for i:=1 to n do
    if not bin_code[i] then
    begin
      res:= false;
      break;
    end;
  b_full:=res;
end;

function sum(group:boolean):integer;
var s,i:integer;
begin
  s:=0;
  for i:=1 to n do
    if bin_code[i]=group then
      s:=s+prices[i];
  sum:=s;      
end;
begin
readln(n);
s:=0;
for i:=1 to n do
begin
  read(prices[i]);
  s:=s+prices[i];
  bin_code[i]:=false;
end;


r:=s/2;
min_bc:=bin_code;
min:=abs(r-sum(true));
while not b_full do
begin
  b_inc;
  k:=abs(r-sum(true));
  if k<min then
  begin
    min:=k;
    min_bc:=bin_code;
    if min = 0 then break;
  end;
end;
bin_code:=min_bc;
writeln(abs(s-2*(sum(true))));
end.