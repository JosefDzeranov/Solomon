package com.box2;


import java.util.Scanner;
import java.lang.StringBuilder;
import java.lang.System;


public class Main {

    public static void main(String[] args) {

	    Scanner sc = new Scanner(System.in);
        int box_num, balls_num, box_par, color_par;
        box_num=balls_num=box_par=color_par=0;

/*
        if (sc.hasNextInt()) {
            box_num = sc.nextInt();
        }
        else
        System.exit(-1);

        if(box_num < 2 || box_num > 10) {
            System.exit(-1);
        }


        if (sc.hasNextInt()) {
            balls_num = sc.nextInt();
        }
        else
        System.exit(-1);


        int[][] Boxes = new int[box_num][balls_num];
        for(int i=0;i<box_num;i++) {
            for (int j = 0; j < balls_num; j++) {
                Boxes[i][j] = -1;
            }
        }
        for(int i=0;i<balls_num;i++)
        {
            if(sc.hasNextInt()) {
                color_par = sc.nextInt() - 1;
            }
            else
            System.exit(-1);

            if (sc.hasNextInt()) {
                box_par = sc.nextInt() - 1;
            }
            else
            System.exit(-1);

*/

            if(color_par < 0 || box_par < 0 || color_par >= box_num || box_par >=box_num) {
                System.exit(-1);
            }

            Boxes[box_par][i]=color_par;

        }

        int counter=0;
        StringBuilder sb = new StringBuilder();
        boolean hasChanged = false;


            for (int i = 0; i < box_num; i++) {
                for (int j = 0; j < balls_num; j++) {
                    if (Boxes[i][j] == -1 || Boxes[i][j] == i) {
                        continue;
                    }
                    hasChanged = false;
                    for (int k = 0; k < box_num; k++) {
                        if (i == k) {
                            continue;
                        }
                        for (int l = 0; l < balls_num; l++) {
                            if (Boxes[k][l] == -1 || Boxes[k][l] == k) {
                                continue;
                            }
                            if (Boxes[i][j] == k && Boxes[k][l] == i) {
                                Boxes[i][j] = i;
                                Boxes[k][l] = k;
                                hasChanged = true;
                                ++counter;

                                sb.append(i + 1);
                                sb.append(' ');
                                sb.append(k + 1);
                                sb.append(' ');
                                sb.append(k + 1);
                                sb.append(' ');
                                sb.append(i + 1);
                                sb.append('\n');
                            }
                        }
                    }
                    //если взаимовыгодно обменяться не удалось
                    if(hasChanged == false) {
                        for (int k = 0; k < box_num; k++) {
                            if (i == k) {
                                continue;
                            }
                            for (int l = 0; l < balls_num; l++) {
                                if (Boxes[k][l] == -1 || Boxes[k][l] == k) {
                                    continue;
                                }
                                if ( Boxes[k][l] == i) {    //обмен производится, когда одной корзине это выгодно, а другой безразлично
                                    int bc = Boxes[i][j]; //цвет первого шара
                                    Boxes[i][j] = i;
                                    Boxes[k][l] = bc;
                                    //hasChanged = true;
                                    ++counter;

                                    sb.append(i + 1);
                                    sb.append(' ');
                                    sb.append(bc + 1);
                                    sb.append(' ');
                                    sb.append(k + 1);
                                    sb.append(' ');
                                    sb.append(i + 1);
                                    sb.append('\n');
                                }
                            }
                        }
                    }
                }
            }



        for(int i=0;i<box_num;i++) {
            for (int j = 0; j < balls_num; j++) {
                if (Boxes[i][j] == -1 || Boxes[i][j] == i) {
                    continue;
                }
                int box_code = Boxes[i][j];
                int empty_slot=-1;
                while( (++empty_slot) < balls_num) {
                   if(Boxes[box_code][empty_slot] == -1) {
                       Boxes[box_code][empty_slot] = Boxes[i][j];
                       Boxes[i][j] = -1;
                       ++counter;

                       sb.append(i+1);
                       sb.append(' ');
                       sb.append(Boxes[box_code][empty_slot]+1);
                       sb.append(' ');
                       sb.append(box_code+1);
                       sb.append('\n');
                       break;
                   }
                }


            }
        }
        //перекладывания

        sb.insert(0, '\n');
        sb.insert(0, counter);
        System.out.print(sb.toString());

    }
}

