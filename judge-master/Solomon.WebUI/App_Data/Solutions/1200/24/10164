const
        SIZE = 109;
        KNDN = 9;

type
        TArr = array[0..SIZE] of LongInt;
        TKind = array[0..KNDN] of LongInt;

procedure Init (var a : TArr; var n : LongInt; var b : TKind);
var
        i : LongInt;
        num : Integer;
begin
        ReadLn (n);

        for i := 0 to KNDN do
                b[i] := 0;

        for i := 0 to SIZE do
        begin
                a[i] := 0;
        end;

        for i := 1 to n do
        begin
                Read (num);

                Inc (a[num])
        end;
end;

procedure CountPairs (var a : TArr; var b : TKind; var cnt, n : LongInt);
var
        i, j, len, num, p, k, r : Integer;
        s : string;
begin
        cnt := 0;

        for i := 0 to SIZE do
        begin
                if a[i] = 0 then
                        Continue;

                Str (i, s);
                len := Length (s);

                for j := 1 to len-1 do
                        for k := j+1 to len do
                                if s[j] = s[k] then
                                begin
                                        Delete (s, k, 1);
                                        Dec (len);
                                end;

                for j := 1 to len do
                begin
                        Val (s[j], num, r);

                        Inc (b[num], a[i])
                end;
        end;

        for i := 0 to KNDN do
        begin
                if b[i] = n then
                begin
                        cnt := n*(n-1) div 2;
                        break
                end
                else
                        Inc (cnt, b[i]*(b[i]-1) div 2);
        end;

end;

var
        a : TArr;
        b : TKind;
        n, cnt, i : LongInt;

begin
        Init (a, n, b);

        CountPairs (a, b, cnt, n);

        {for i := 0 to 9 do
                Write (b[i], ' ');
         }
        WriteLn (cnt)
end.
