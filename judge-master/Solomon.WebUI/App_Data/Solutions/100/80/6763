#include <iostream>
#include <vector>
#include <string>
#include <algorithm>

using namespace std;

int isPolindrome(string str)
{
	sort(str.begin(), str.end());

	int count[255];
	for (int i = 0; i < 255; i++) count[i] = 0;

	for (string::iterator it = str.begin(); it != str.end(); it++)
	{
		count[*it]++;
	}

	int oddCnt = 0;
	for (int i = 0; i < 255; i++)
	{
		if (count[i] % 2 != 0) oddCnt++;
	}

	return oddCnt <= 1;
}

int main()
{
	int n, k, t = 0;
	//char *s= new char[1000];
	string s;
	string str="";
	vector <string> slo;
	vector <char> simv;
	bool flag = 0;

	fflush(stdin);
	getline(cin, s);

	s += ' ';// дописываем к строке s пробел справа
	int i = 0; 
	int dl = strlen(s.c_str()-1);
	int d = dl - 2;


	while (i < d)
	{
		if (s[i] != ' ')
		{
			int b = i; // начало текущего слова
			while (s[i] != ' ') i++;
			t = i - b;  // длина текущего слова
			for (int j = b; b < i; b++)
			{
				str += s[b];
			}
			slo.push_back(str);
			str = "";
		}
		i++;
	}

	dl = slo.size();
	d = dl/ 2;

	k = 0;
	for (int i = 0; i < d; i++)
	{
		str = slo[i] + slo[dl - i-1];

		if (isPolindrome(str)) k++;
	}

	cout << k;
	return 0;

}


