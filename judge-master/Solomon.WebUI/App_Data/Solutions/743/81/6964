#include <iostream>
#include <cmath>
#include <vector>
#include <string>
#include <iomanip>
#include <queue>
#include <algorithm>
#include <stack>

using namespace std;

int check (int i) {
	int cnt = 0;
	while (i) {
		i /= 10;
		cnt++;
	}

	return cnt;
}

int find(int i) {
	int dig(int);
	int res, k = i;

	for (i+=1; i < (k+50); i++) {
		if (dig(i) == 2)
			return i;
	}
}

int  dig(int i) {
	int r = (int)sqrt((double)i);
	int cnt = 0;
	for (int j = 1; j <= r; j++)
		if (i % j == 0)
			cnt += 2;
	return cnt;
}

int main () {
	int a[10000];
	int sets[10] = {0};
	int check(int);
	int n, x, maxn = 0, numset;	
	int find(int);
	
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}

//	sort(a.begin(), a.end());

	for (int i = 0; i < n; i++)
		sets[check(a[i])]++;

/*	for (int i = 0; i < 6; i++)
		cout << sets[i];

	cout << endl;*/
	maxn = sets[1];
	for (int i = 2; i < 6; i++) {
		if (sets[i] > maxn) {
			numset = i;
			maxn = sets[i];
		}
	}

	//cout << numset << endl;

	for (int i = 0; i < n; i++) {
		if (check(a[i]) == numset)
			a[i] = find(a[i]);
	}

	for (int i = 0; i < n; i++)
		cout << a[i] << ' ';

	return 0;
}


