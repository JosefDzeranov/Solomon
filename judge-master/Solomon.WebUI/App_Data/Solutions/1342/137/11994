#include <iostream>
#include <memory>

using namespace std;

char *met;

void dfs(char **matrix, int n, int i) {
	for (int j = 0; j < n; j++) {
		if (matrix[i][j] == '+') {
			if (met[j] != 1) {
				met[j] = 1;
				dfs(matrix, n, j);
			}
		}
	}
}

int findSov(char **matrix, int n) {
	int c = 0;
	for (int i = 0; i < n; i++) {
		met = new char[n];
		memset(met, 0, sizeof(char));
		met[i] = 1;
		dfs(matrix, n, i);
		bool issov = true;
		for (int j = 0; j < n; j++) {
			if (met[j] != 1)
				issov = false;
		}
		if (issov)
			c++;
		delete met;
	}

	return c;
}

int main() {
	int n, p;
	cin >> n >> p;
	char **matrix = new char*[n];
	for (int i = 0; i < n; i++) {
		matrix[i] = new char[n];
		for (int j = 0; j < n; j++) {
			cin >> matrix[i][j];
		}
	}
	int k = findSov(matrix, n);
	cout << k << endl;
	
	return 0;
}