#include <iostream>
#include <math.h>
#include <stdio.h>

using namespace std;

int dp[1001][1001];
bool dp_use[1001][1001];
bool use[1001];
int val[1000];
int n, sum;
int exp_value;
int cnt;

int main() {
    //freopen("input.txt", "r", stdin);
    scanf ("%d", &n);

    for (int i = 0; i < n; i++) {
        scanf("%d", &val[i]);
        sum += val[i];
    }
    int sm = sum;
    sum /= 2;

    for (int x = 1; x <= sum; x++)
        for (int i = 1; i <= n; i++) {
            dp[x][i] = dp[x][i - 1];
                if (x >= val[i - 1])
                    exp_value = dp[x-val[i - 1]][i - 1] + val[i - 1];
                else
                    exp_value = val[i - 1];
                if (fabs(x - exp_value) < fabs(x - dp[x][i])) {
                    dp[x][i] = exp_value;
                    dp_use[x][i] = true;
                }
        }

    int ms = n;

    while (n && sum >= 0) {
        if (dp_use[sum][n]) {
            use[n - 1] = true;
            sum -= val[n - 1];
            ++cnt;
        }
        --n;
    }

    int res = 0;

    for (int i = 0; i < ms; i++)
        if (use[i])
            res += val[i];

    cout << max(sm - 2 * res, 2 * res - sm);

    return 0;
}
