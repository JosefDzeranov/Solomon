using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace C
{
    class Program
    {
        static int[,] m;
        static int[] mark;
        static int n=0;
        static int max =0;
        static int maxlen = 0;
        static string[] s;
        static void BFS(int i, int path, int len)
        { 
            
            for (int j = 0; j< n; j++)
                if (m[i, j] == 1)
                {
                    if (mark[j] == 0)
                    {
                        mark[j] = 1;
                        BFS(j, path+1, len + s[j].Length);
                        mark[j] = 0;
                    }
                }
            if (path >= max && len > maxlen) { max = path; maxlen = len;
            Console.WriteLine(max + " " + maxlen + " " + i);
            }
        }
        static void Main(string[] args)
        {
            string t = "08";
            StreamReader sr = new StreamReader(t+".in");
            StreamWriter sw = new StreamWriter(t+".out");
            n = Convert.ToInt32(sr.ReadLine());
            s = new string[n];
            
            int k=0;
            for (int i = 0; i < n; i++)
            {
                string tt =sr.ReadLine();
                if (tt.Length >= 3) { s[k] = tt; k++; }
 
            }
            n = k;
            m = new int[n, n];
            //построить матрицу смежности
            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++)
                {
                    if (i == j) m[i, j] = 0;
                    else
                        if (s[i].Substring(s[i].Length - 3, 3) == s[j].Substring(0, 3))
                            m[i, j] = 1;
                }
            //поиск в глубину
            
            for (int i = 0; i < n; i++)
            {
                mark = new int[n];
                mark[i] = 1;
                BFS(i,1,s[i].Length);
                Console.WriteLine(max + " " + maxlen + " " + i);
            }
            sw.WriteLine(max + " " + maxlen);
            Console.WriteLine(max + " " + maxlen);
            sw.Close();
            sr.Close();
        }
    }
}
