#include <iostream>
#include <vector>
#include <cstdio>
#include <algorithm>
#include <string>
#include <queue>

using namespace std;

int g[150][150];
int dx[] = {1,-1,0,0};
int dy[] = {0,0,1,-1};
int ans;

void bfs (pair<int, int> p) {
	queue<pair<int,int> > q;
	q.push(p);
	g[p.first][p.second] = true;
	while(q.size()) {
		pair<int, int> v;
		v = q.front(); q.pop();
		pair<int, int> to;
		for (int i=0; i<4; ++i) {
			to.first = v.first + dx[i];
			to.second = v.second + dy[i];
			if (g[to.first][to.second] == false) {
				g[to.first][to.second] = true;
				q.push(to);
			}
		}
	}
	 
}

int main () {
	int n,m,k;
	cin>>n>>m>>k;
	for (int i=0; i<n+1; ++i) {g[i][0] = true; g[i][m+1] = true;}
	for (int i=0; i<m+2; ++i) {g[0][i] = true; g[n+1][i] = true; }
	for (int i=0; i<k; ++i) {
		int a,b;
		cin>>a>>b;
		g[a][b] = true;
	}				   
	for (int i=1; i<=n; ++i) {
		for (int j=1; j<=m; ++j) {
			if (!g[i][j]) {
				bfs(make_pair(i,j));
				ans++;
			}
		}
	}	  
	cout<<ans;
	}