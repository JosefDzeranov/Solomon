#include <iostream>
#include <cmath>
#include <algorithm>

using namespace std;


int main()
{
	int n;
	cin >> n;
	int mas[1000][2];
	for (int i = 0; i < n; i++)
	{
		cin >> mas[i][0] >> mas[i][1];
	}
	double s = 0.0;
		int ss = 0;
	for (int i = 1; i < n - 1; i++)
	{
		/*double a = sqrt(double((mas[0][0] - mas[i][0]) * (mas[0][0] - mas[i][0]) + (mas[0][1] - mas[i][1]) * (mas[0][1] - mas[i][1])));
		double b = sqrt(double((mas[0][0] - mas[i + 1][0]) * (mas[0][0] - mas[i + 1][0]) + (mas[0][1] - mas[i + 1][1]) * (mas[0][1] - mas[i + 1][1])));
		double c = sqrt(double((mas[i + 1][0] - mas[i][0]) * (mas[i + 1][0] - mas[i][0]) + (mas[i + 1][1] - mas[i][1]) * (mas[i + 1][1] - mas[i][1])));
		double p = (a + b + c) / 2.0;
		double s2 = p * (p - a) * (p - b) * (p - c);
		s += sqrt(s2);*/
		ss += (mas[i][0] + mas[i + 1][0]) * (mas[i][1] - mas[i + 1][1]); 
	}
	ss += (mas[n - 1][0] + mas[0][0]) * (mas[n - 1][1] - mas[0][1]); 
	ss = abs(ss);
	ss /= 2;
//	ss = int(s) + 1;
	//if (abs(double(ss) - s) > 1e-6)
	//	ss--;
	//ss = int(s);
	//if (abs(double(ss) - s) > abs(double(ss + 1) - s))
	//	ss++;
	//cout << ss;
	long long cnt = 0;
	for (int i = 0; i < n; i++)
	{
		int a = i + 1;
		if (i == n - 1)
			a = 0;
		double path = sqrt(double((mas[a][0] - mas[i][0]) * (mas[a][0] - mas[i][0]) + (mas[a][1] - mas[i][1]) * (mas[a][1] - mas[i][1])));
		for (int j = min(mas[i][0], mas[a][0]); j <= max(mas[i][0], mas[a][0]); j++)
			for (int k = min(mas[i][1], mas[a][1]); k <= max(mas[i][1], mas[a][1]); k++)
			{
				double b = sqrt(double((mas[a][0] - j) * (mas[a][0] - j) + (mas[a][1] - k) * (mas[a][1] - k)));
				double c = sqrt(double((mas[i][0] - j) * (mas[i][0] - j) + (mas[i][1] - k) * (mas[i][1] - k)));
				if (b + c == path)
					cnt++;
			}
		//cnt -= 2;
	}
	cnt -= n;
	cnt /= 2;
	long long ans = ss - cnt + 1;
	cout << ans;
	return 0;
}