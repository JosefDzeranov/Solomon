#include <iostream>
#include <math.h>

using namespace std;


struct point{
	double x,y;
	friend istream& operator >> (istream& is, point& p) {
		is >> p.x >> p.y;
		return is;
	}
};

long double dist(point a, point b) {
	return sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));
}

long double scal(point a, point b, point c) {
	return (a.x - b.x) * (c.x - b.x) + (a.y - b.y) * (c.y - b.y);
}

int main() {

	int cnt = 0;
	point mas[4];
	for (int i = 0; i < 4; i++)
		cin >> mas[i];
	long double d = dist(mas[0], mas[3]) ;
	for (int i = 0; i < 3; i++)
	{
		long double f = dist(mas[i], mas[i + 1]);
		if (d == f)
			cnt++;
	}
	if (cnt == 3 && scal(mas[0], mas[1], mas[2])== 0)
		cout << "YES" << endl;
	else
		cout << "NO" << endl;

	return 0;
}