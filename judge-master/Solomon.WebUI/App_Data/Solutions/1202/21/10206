program A;

type
        Tarr = array [1..100, 1..2] of Integer;

procedure ReadData (var n, m : Integer; var ar : Tarr);

var
        i : Integer;

begin
        ReadLn (n, m);

        for i := 1 to m do
                ReadLn (ar[i, 1], ar[i, 2]);
end;

procedure Swap (var a, b : Integer);

var
        t : Integer;

begin
        t := a;
        a := b;
        b := t
end;

function F (m : Integer; ar : Tarr; const b, c : Integer) : Boolean;

begin
        F := ar[b, 2] = c

end;

procedure Print1 (n, m : Integer; ar : Tarr);

var
        i, cnt, b : Integer;
        arpr, arsr : Tarr;

begin
        cnt := 0;

        {for i := 1 to m do
                if ar[i, 1] <> ar[i, 2] then
                        Inc (cnt); }

        FillChar (arpr, SizeOf (arpr), 0);
        FillChar (arsr, SizeOf (arpr), 0);

        for i := 1 to m do
                if (ar[i, 1] <> ar[i, 2]) and (ar[ar[i, 2], 2] = ar[i, 1]) then
                begin
                        arsr[i, 1] := ar[i, 2];
                        arsr[i, 2] := ar[ar[i, 2], 2];
                        Swap (ar[ar[i, 2], 2], ar[i, 2]);
                        Inc (cnt)
                end
                else
                if (ar[i, 1] <> ar[i, 2]) and (ar[ar[i, 1], 2] = ar[i, 1]) then
                begin
                        arsr[i, 1] := ar[i, 2];
                        arsr[i, 2] := ar[ar[i, 1], 2];
                        Swap (ar[ar[i, 1], 1], ar[i, 1]);
                        Inc (cnt)
                end;

        for i := 1 to m do
                if ar[i, 1] <> ar[i, 2] then
                begin
                        arpr[i, 1] := ar[i, 1];
                        arpr[i, 2] := ar[i, 2];
                        Inc (cnt)
                end;

        WriteLn (cnt);

        for i := 1 to m do
                if arpr[i, 1] > 0 then
                        WriteLn (arpr[i, 2], ' ', arpr[i, 1], ' ', arpr[i, 1])
                else
                        if arsr[i, 1] > 0 then
                                WriteLn (arsr[i, 2], ' ', arsr[i, 1], ' ', arsr[i, 1], ' ', arsr[i, 2])
end;

var
        n, m, i, cnt : Integer;
        ar : Tarr;

begin
        ReadData (n, m, ar);

        cnt := 0;

        for i := 1 to m do
                if ar[i, 1] = ar[i, 2] then
                        Inc (cnt);

        if cnt = m then
                WriteLn (0)
        else
                Print1 (n, m, ar)
end.