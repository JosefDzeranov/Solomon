#include <iostream>

using namespace std;
int mas[103][103];
	int used[103][103];
	int m, n, k;
void dfs(int x, int y)
{
	used[x][y] = 1;
	if (x > 1)
			{
				if (mas[x - 1][y] == 0 && used[x - 1][y] == 0) 
					dfs(x-1, y);
			}
			if (y < n) 
			{
				if (mas[x][y + 1] == 0 && used[x][y + 1] == 0)
					dfs(x, y + 1);
			}
			if (x < m) 
			{
				
				if (mas[x + 1][y] == 0 && used[x + 1][y] == 0)
					dfs(x + 1, y);
			}
			if (y > 1)
			{
				
				if (mas[x][y - 1] == 0 && used[x][y - 1] == 0)
					dfs(x, y - 1);
			}
}
int main()
{
	
	cin >> m >> n >> k;
	for (int i = 0; i <= m; i++)
		for (int j = 0; j <= n; j++)
		{
			mas[i][j] = 0;
			used[i][j] = 0;
		}
	for (int i = 0; i < k; i++)
	{
		int a, b;
		cin >> a >> b;
		mas[a][b] = 1;
	}
	int cnt = 0;
	for (int i = 1; i <= m; i++)
		for (int j = 1; j <= n; j++)
		{
			if (used[i][j] == 0 && mas[i][j] == 0) {
				dfs(i, j);
				cnt++;}
		}
		cout << cnt;
		return 0;
}