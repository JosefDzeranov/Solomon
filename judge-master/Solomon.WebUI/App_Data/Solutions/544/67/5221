#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

struct task {
	long long int vremya, t, id;
};

vector <task> mas;
vector <long long int> cnt;
vector <long long int> a;
vector <int> ans;

bool cmp(task a, task b) {
	if (a.vremya < b.vremya || (a.vremya == b.vremya && a.id > b.id) || (a.vremya == b.vremya && a.id == b.id && a.t < b.t))
		return true;
	else
		return false;
}


int main() {

	//freopen("input.txt", "r", stdin);

	int n;
	cin >> n;
	cnt.assign(n, 0);
	for (int i = 0; i < n; i++)
	{
		task f;
		long long int s, t, c;
		cin >> s >> t >> c;

		cnt[i] = c;
		
		f.id = 0;
		f.t = i;
		f.vremya = s;
		mas.push_back(f);

		f.id = 1;
		f.t = i;
		f.vremya = s + t;
		mas.push_back(f);
	}

	sort(mas.begin(), mas.end(), cmp);

	a.assign(2*n, 0);
	for (int i = 0; i < 2*n; i++)
		if (i)
		{
			if (mas[i].id == 0)
			{
				a[i] = a[i-1];
				cnt[mas[i].t] += a[i];
			}
			else
			{
				if (a[i-1] > cnt[mas[i].t])
					a[i] = a[i-1];
				else {
					a[i] = cnt[mas[i].t];
					/*
					int h = 1;
					int j = i - 1;

					while (h && j) {
						int g = ans.size()-1;
						if (g < 0)
							break;
						if (ans[g] == mas[j].t)
							ans.pop_back();
						if (mas[i].t == mas[j].t)
							h = 0;
						j--;
					}
					*/
					ans.push_back(mas[i].t);
				}
			}
			

		}

	cout << a[2*n-1] << endl;
	cout << ans.size() << endl;
	for (int i = 0; i < ans.size(); i++)
		cout << ans[i] + 1 << " ";
	return 0;
}