#include <iostream>
#include <vector> 
#include <deque>

using namespace std;

//long long mas[300000] = { 0 };
long long cnt = 0;
vector <long long> ans;
deque <long long> v;
int main()
{
	int n, k, p;
	cin >> n >> p;
	for (int i = 0; i < n; i++)
	{
		long long t;
		cin >> t;
		v.push_back(t);
		cnt += t * t;
	}
	ans.push_back(cnt);
	cin >> k;
	for (int i = 0; i < k; i++)
	{
		int a, b;
		cin >> a >> b;
		if (a == 1)
		{
			if (b == 1)
			{
				v[b] += v[b - 1];
				v.pop_front();
			}
			else if (b == n)
			{
				v[n - 2] += v[b - 1];
				v.pop_back();
			}
			else
			{
				v[b] += v[b - 1] / 2;
				v[b - 2] += v[b - 1] / 2;
				if (v[b - 1] % 2 == 1)
					v[b]++;
				for (int j = b - 1; j < n - 1; j++)
					v[j] = v[j + 1];
				v.pop_back();
			}
		}
		else
		{
			v.push_back(0);
			for (int j = v.size() - 1; j >= b + 1; j--)
				v[j] = v[j - 1];
			v[b] = v[b - 1] / 2;
			if (v[b - 1] % 2 == 1)
				v[b]++;
			v[b - 1] = v[b - 1] / 2;
		}
		cnt = 0;
		for (int j = 0; j < v.size(); j++)
			cnt += v[j] * v[j];
		ans.push_back(cnt);
	}
	for (int i = 0; i < ans.size(); i++)
		cout << ans[i] << endl;
	return 0;
	/*
	cnt -= mas[b - 1] * mas[b - 1];
		if (a == 1)
		{
			if (b == 1)
			{
				cnt -= mas[b] * mas[b];
				mas[b] += mas[0];
			}
			else if (b == n)
			{
				cnt -= mas[b - 2] * mas[b - 2];
				mas[b - 2] += mas[b - 1];
			}
			else
			{
				cnt -= mas[b] * mas[b];
				cnt -= mas[b - 2] * mas[b - 2];
				mas[b - 2] += mas[b - 1] / 2;
				mas[b] += mas[b - 1] / 2;
				if (mas[b - 1] % 2 == 1) 
					mas[b]++;
			}
			n--;
			for (int j = b - 1; j < n; j++)
				mas[j] = mas[j + 1];
		}
		else
		{
			for (int j = n - 1; j >= b; j--)
				mas[j + 1] = mas[j];
			mas[b] = mas[b - 1] / 2;
			if (mas[b - 1] % 2 == 1)
				mas[b]++;
			mas[b - 1] = mas[b - 1] / 2;
			n++;
		}
		cnt += mas[b - 1] * mas[b - 1];
		if (a == 2) cnt += mas[b] * mas[b];
		else if (b != 1) cnt += mas[b - 2] * mas[b - 2];
		ans.push_back(cnt);
		*/
}