#include <iostream>
#include <string>
#include <vector>
#include <map>

using namespace std;


int main()
{
	map <string, int> ex;
	int n, p;
	cin >> n >> p;
	vector <string> filt;
	bool mas[50000][2];
	for (int i = 0; i < 50000; i++)
	{
		mas[i][0] = 0;
		mas[i][1] = 0;
	}
	for (int i = 0; i < n; i++)
	{
		string s;
		cin >> s;
		if (s[0] == '*')
		{
			mas[i][0] = 1;
			s = s.substr(2, s.size() - 2);
		}
		if (s[s.size() - 1] == '*')
		{
			mas[i][1] = 1;
			s = s.substr(0, s.size() - 2);
		}
		ex[s]++;
		filt.push_back(s);
	}
	int k;
	cin >> k;
	vector <int> ans;
	for (int i = 0; i < k; i++)
	{
		string s;
		cin >> s;
		int cnt = 0;
		for (int j = 0; j < n; j++)
		{
			bool t = 1;
			bool e = 0;
			if (mas[j][0] == 1 && mas[j][1] == 1)
			{
				if (s.size() < filt[j].size())
					continue;
				if (e == 0)
				for (int l = 0; l < n - filt[j].size() + 1; l++)	
				{
					t = 1;
					if (e == 0)
					for (int m = l; m < l + filt[j].size(); m++)
					{
					//	if (t == 1 && e == 0)
							if (filt[j][m - l] != s[m])
							{
								t = 0;
								break;
							}
					}
					if (t == 1)
					{
						cnt++;
						e = 1;
					}
				}
			}
			
			else if (mas[j][0] == 1)
			{
				if (s.size() < filt[j].size())
					continue;
				bool tt = 1;
				int t = s.size() - filt[j].size();
				for (int l = filt[j].size() - 1; l >= 0; l--)
					if (filt[j][l] != s[l + t])
					{
						tt = 0;
						break;
					}
				if (tt == 1)
					cnt++;
			}
			else if (mas[j][1] == 1)
			{
				if (s.size() < filt[j].size())
					continue;
				bool tt = 1;
				//int t = s.size() - filt[j].size();
				for (int l = 0; l < filt[j].size(); l++)
					if (filt[j][l] != s[l])
					{
						tt = 0;
						break;
					}
				if (tt == 1)
					cnt++;
			}
			else if (s.size() == filt[j].size())
			{
				bool tt = 1;
				//int t = s.size() - filt[j].size();
				for (int l = 0; l < filt[j].size(); l++)
					if (filt[j][l] != s[l])
					{
						tt = 0;
						break;
					}
				if (tt == 1)
					cnt++;
			}
		}
		ans.push_back(cnt);
		//ans.push_back(ex[s]);
	}
	for (int i = 0; i < ans.size(); i++)
		cout << ans[i] << endl;
	return 0;
}