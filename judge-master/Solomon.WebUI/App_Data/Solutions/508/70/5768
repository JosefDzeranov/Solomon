#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

struct Conder {
	unsigned power, ship;

	friend bool operator<(const Conder &first, const Conder &second) {
		if (first.ship < second.ship) return true;
		else return false;
	}
};

int compare(Conder *first, Conder *second)
{
	if (first->ship > second->ship) {
		return 1;
	} else if (first->ship < second->ship) {
		return -1;
	} else
		return 0;
}

int main()
{
	unsigned n, *classes, m;
	vector<Conder> conders;
	cin >> n;
	classes = new unsigned[n];
	for (unsigned i = 0; i < n; i++) {
		cin >> classes[i];
	}
	cin >> m;
	conders.resize(m);
	for (unsigned i = 0; i < m; i++) {
		cin >> conders[i].power >> conders[i].ship;
	}

	sort(conders.begin(), conders.end());

	unsigned price = 0;
	for (unsigned i = 0; i < n; i++) {
		for (unsigned j = 0; j < m; j++) {
			if (conders[j].power >= classes[i]) {
				price += conders[j].ship;
				break;
			}
		}
	}

	cout << price << endl;
	//system("pause");

	return 0;
}