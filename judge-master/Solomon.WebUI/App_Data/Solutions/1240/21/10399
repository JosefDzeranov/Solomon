TYPE
  TAns = Record
    a,b,c,d,kol: LongInt;
  End;
VAR  
  f: Boolean;
  n,k,i,j,ind,jnd,mn_kol: LongInt;
  res: Array [0..16] of LongInt;
  sh,zn,pr: Array [1..10] of Array [1..10] of LongInt;
  d: Array of TAns;

  Function Min(a,b: LongINt): LongInt;
  Begin
    if (a < b) then Min := a
    Else Min := b;
  End;
  
  Function Min_sh(ind,jnd: LongInt): LongInt;
  Var 
    mn,i,j: LongINt;
    res: Array [0..12] of LongInt;
  Begin
    i := jnd;
    j := zn[ind][jnd]+1;
    res[0] := zn[ind][jnd]+1;
    While (j > 0)and(i > 0) do begin
      res[j] := i;
      i := pr[ind][i];
      Dec(j);
    End;
  
    mn := 150;
    For i := 1 to res[0]-1 do
      mn := Min(mn, sh[res[i]][res[i+1]]);
      
    If (sh[jnd][ind] > 0) then mn := Min(mn, sh[jnd][ind]);
    
    Min_sh := mn;
  End;
  
  Procedure Add_res(a0,b0,c0,d0,k0: LongINt);
  Begin
    SetLength(d, Length(d)+1);
    With d[Length(d)-1] do begin
      a := a0;
      b := b0;
      c := c0;
      d := d0;
      kol := k0;
    End;
  End;

BEGIN
  //Assign(input,'input.txt'); ReSet(input);
// Input
  Read(n,k);
  For i := 1 to k do begin
    Read(ind,jnd);
    if (ind <> jnd) then Inc(sh[ind][jnd]);
  End;

// Algorithm
  While true do begin
    // Поиск миним. цикла
    For i := 1 to n do
      For j := 1 to n do
        if (i = j) then begin             zn[i][i] := 0; pr[i][i] := 0; end
        else if (sh[i][j] > 0) then begin zn[i][j] := 1; pr[i][j] := i; end
        else zn[i][j] := 15;

    For i := 1 to n do
      For j := 1 to n do
        For k := 1 to n do
          if (zn[i][j] > zn[i][k] + zn[k][j]) then begin
            zn[i][j] := zn[i][k] + zn[k][j];
            pr[i][j] := pr[k][j];
         end;    
    
    ind := 1;
    jnd := 1;
    mn_kol := 0;
    For i := 1 to n do
      For j := 1 to n do
        if (zn[i][j] = 15)or(zn[i][j] = 0) then Continue
        else if (sh[j][i] > 0)and(sh[jnd][ind] = 0) then begin 
          ind := i; jnd := j; mn_kol := Min_sh(i,j); end
        else if (sh[j][i] * sh[jnd][ind] > 0)and(zn[i][j] < zn[ind][jnd]) then begin 
          ind := i; jnd := j; mn_kol := Min_sh(i,j); end
        else if (sh[j][i] + sh[jnd][ind] = 0)and(zn[i][j] < zn[ind][jnd]) then begin 
          ind := i; jnd := j; mn_kol := Min_sh(i,j); end
        else if (zn[i][j] = zn[ind][jnd])and(mn_kol < Min_sh(i,j))and
        ((sh[j][i] * sh[jnd][ind] > 0)or(sh[j][i] + sh[jnd][ind] = 0)) then begin 
          ind := i; jnd := j; mn_kol := Min_sh(i,j); end
        else if (zn[ind][jnd] = 0)and(zn[i][j] > 0) then begin
          ind := i; jnd := j; mn_kol := Min_sh(i,j); end;
        
    // Удаление миним. цикла
    i := jnd;
    j := zn[ind][jnd]+1;
    res[0] := zn[ind][jnd]+1;
    While (j > 0)and(i > 0) do begin
      res[j] := i;
      i := pr[ind][i];
      Dec(j);
    End;
    
    // Выбор способа обмена
    If (res[0] = 2)and(sh[jnd][ind] > 0) then begin
      Add_res(res[1], res[2], res[2], res[1], mn_kol);
      sh[res[1]][res[2]] := sh[res[1]][res[2]] - mn_kol;
      sh[res[2]][res[1]] := sh[res[2]][res[1]] - mn_kol; End
    Else begin
      For i := 1 to res[0]-1 do begin
        Add_res(res[i], res[i+1], res[i+1], -1, mn_kol);
        sh[res[i]][res[i+1]] := sh[res[i]][res[i+1]] - mn_kol;
      end;
      If (sh[jnd][ind] > 0) then begin
        Add_res(res[jnd], res[ind], res[ind], -1, mn_kol);
        sh[jnd][ind] := sh[jnd][ind] - mn_kol;
      end;
    End;
  
  // Проверка
    f := false;
    For i := 1 to n do
      For j := 1 to n do
        If (sh[i][j] > 0) then f := true;
    if (not f) then Break;
    
    {
    Write('| ');  For i := 0 to Res[0] do Write(res[i],' '); Writeln;
    Write('|| '); For i := 0 to Res[0] do Write(res[i],' '); Writeln;
    For i := 1 to n do begin
      For j := 1 to n do Write(pr[i][j],' '); Writeln; end;
    Writeln;}
  End;

  Writeln(Length(d));
  For i := 0 to Length(d)-1 do
    For j := 1 to d[i].kol do
      if (d[i].d <> -1) then Writeln(d[i].a,' ',d[i].b,' ',d[i].c,' ',d[i].d)
      else Writeln(d[i].a,' ',d[i].b,' ',d[i].c);
END.
