type t=record
o:longint;
t:longint;
end;
var
p:array[1..10000000] of t;
a:array[1..100000000] of longint;
i, j, col, n:longint;
procedure step(i, j:longint);
var
s, t:string;
k, m:longint;
f, fg:boolean;
begin
str(a[i], s);
str(a[j], t);
f:=false;
for k := 1 to  length(s) do
 for m := 1 to length(t) do
  if s[k]=t[m] then f:= true;
if f=true then
begin
fg:=true;
for k := 1 to col do
if (((p[k].o= a[i]) and (p[k].t= a[j]))
or
((p[k].o= a[i]) and (p[k].t= a[j])))
then fg:=false;

if fg=true then begin inc(col);
p[col].o:=a[i];
p[col].t:=a[j];
end;
end;
end;
begin
readln(n);

for i := 1 to n do
 read(a[i]);
 col:=0;
 for i := 1 to n do
   for j := i+1 to n do
   step(i, j);
   
   
   writeln(col);
end.