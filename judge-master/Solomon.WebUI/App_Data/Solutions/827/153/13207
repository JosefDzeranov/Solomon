#include <iostream>
#include <string>
#include <vector>

using namespace std;

int main(){
	vector< vector <unsigned long long int> > mas;
	unsigned long long  n, m; cin >> n >> m;
	mas.resize(n + 1);
	for (int i = 0; i < n + 1; i++)
		mas[i].resize(m + 1);
	unsigned long long  k; cin >> k;
	unsigned long long  a, b;
	unsigned long long  sum = 0;
	vector <int> s1;
	vector <int> s2;
	for (int i = 0; i < k; i++){
		cin >> a >> b;
		mas[a][b] = 1;
		s1.push_back(a);
		s2.push_back(b);
		sum++;
	}
	unsigned long long  sec = 0;
	while (sum != n*m){
		sec++;
		vector <int> z1;
		vector <int> z2;
		for (int z = 0; z < s1.size(); z++)
		{
			int i = s1[z];
			int j = s2[z];
			if (mas[i][j] >0 && mas[i][j] <= sec){
				if (i - 1 != 0)
					if (mas[i - 1][j] == 0){
						mas[i - 1][j] = sec + 1;
						sum++;
						z1.push_back(i - 1);
						z2.push_back(j);
					}
				if (i + 1 != n + 1)
					if (mas[i + 1][j] == 0){
						mas[i + 1][j] = sec + 1;
						sum++;
						z1.push_back(i + 1);
						z2.push_back(j);
					}
				if (j - 1 != 0)
					if (mas[i][j - 1] == 0){
						mas[i][j - 1] = sec + 1;
						z1.push_back(i);
						z2.push_back(j-1);
						sum++;
					}
				if (j + 1 != m + 1)
					if (mas[i][j + 1] == 0){
						mas[i][j + 1] = sec + 1;
						z1.push_back(i);
						z2.push_back(j+1);
						sum++;
					}
			}
			
		}
		s1.clear();
		s2.clear();
		s1 = z1;
		s2 = z2;
		/*
		for (int i = 1; i <=n; i++)
			for (int j = 1; j <=m; j++)
				if (mas[i][j] >0 && mas[i][j] <=sec){
					if (i - 1 != 0)
						if (mas[i - 1][j] == 0){
							mas[i - 1][j] = sec+1;
							sum++;
						}
					if (i + 1 != n + 1)
						if (mas[i + 1][j] == 0){
							mas[i + 1][j] = sec+1;
							sum++;
						}
					if (j - 1 != 0)
						if (mas[i][j - 1] == 0){
							mas[i][j - 1] = sec+1;
							sum++;
						}
					if (j + 1 != m + 1)
						if (mas[i][j + 1] == 0){
							mas[i][j + 1] = sec+1;
							sum++;
						}
				}*/
	}
	cout << sec;
	return 0;
}