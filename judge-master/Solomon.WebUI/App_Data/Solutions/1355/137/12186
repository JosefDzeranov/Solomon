#include <iostream>


using namespace std;

int beg[2000] = {0};
char mas[2000][2000];
int n, p;
bool used[2000] = {0};

void dfs(int x, int an)
{
	used[x] = 1;
	if (x != an)
		beg[an]++;
	for (int i = 0; i < n; i++)
		if (mas[x][i] == '+' && used[i] == 0)
			dfs(i, an);
}

int main()
{
	cin >> n >> p;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			cin >> mas[i][j];
	int cnt[2000] = {0};
	int count = 0;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
			used[j] = 0;
		dfs(i, i);
		if (beg[i] == n - 1)
			count++;
	}
	cout << count << endl;
	int kk = count;
	for (int i = 0; i < n; i++)
		for (int j = i; j < n; j++)
		{
		//	if (i == 1 && j == 2)
			//	cout << endl;
			if (mas[i][j] == '+')
				mas[i][j] = '-';
			else if (mas[i][j] == '-')
				mas[i][j] = '+';
			else continue;
			if (mas[j][i] == '+')
				mas[j][i] = '-';
			else if (mas[j][i] == '-')
				mas[j][i] = '+';
			count = 0;
			for (int k = 0; k < n; k++)
				beg[k] = 0;
			for (int k = 0; k < n; k++)
			{
				for (int l = 0; l < n; l++)
					used[l] = 0;
				dfs(k, k);
				if (beg[k] == n - 1)
					count++;
			}
			cnt[count]++;
			if (mas[i][j] == '+')
				mas[i][j] = '-';
			else if (mas[i][j] == '-')
				mas[i][j] = '+';
			if (mas[j][i] == '+')
				mas[j][i] = '-';
			else if (mas[j][i] == '-')
				mas[j][i] = '+';
		}
	for (int i = kk + 1; i <= n; i++)
		cout << cnt[i] << ' ';
	return 0;
}