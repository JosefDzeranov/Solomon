const
  max = 100;

type
  p = array[1..2, 1..max] of byte;

var
  m, n, i, j, x, y, x1, y1: integer;
  w, c, d, l, k, s: integer;
  a: array[0..100, 0..100] of integer;
  q: p;

procedure Net(var q: p; var c, d: integer);
begin
  c := 1; 
  d := 1;
end;

function Pro(var q: p; var c, d: integer): boolean;
begin
  if c = d then 
    Pro := true 
  else 
    Pro := false;
end;

procedure Plus(var q: p; var c, d: integer; var s: integer; var a, b: integer);
begin
  if d > max then begin s := 0; exit; end;
  q[1, d] := a; q[2, d] := b;
  d := d + 1;
  s := 1;
end;

procedure Dele(var q: p; var c, d: integer; var s: integer);
begin
  if Pro(q, c, d) then 
  begin s := 0; exit; end;
  c := c + 1;
  s := 2;
end;

begin 
  read(m, n, k); 
    
  for i := 1 to k do
  begin
    readln(x1, y1); 
    a[x1, y1] := -1;
  end;
  
  Net(q, c, d);
  
  k := 0;
  
  for i := 1 to m do
    for j := 1 to n do
      if a[i, j] = 0 then 
      begin
        k := k + 1;
        Plus(q, c, d, s, i, j);
        a[i, j] := k;
        
        while c <> d do     
          for l := c to d do 
          begin
            x := q[1, l]; y := q[2, l];
            
            if (x > 1) and (a[x - 1, y] = 0) then 
            begin
              w := x - 1;  
              Plus(q, c, d, s, w, y);
              a[w, y] := k;
            end;
            if (x < m) and (a[x + 1, y] = 0) then 
            begin
              w := x + 1;
              Plus(q, c, d, s, w, y);
              a[x + 1, y] := k;
            end;
            if (y > 1) and (a[x, y - 1] = 0) then 
            begin
              w := y - 1;
              Plus(q, c, d, s, x, w);
              a[x, y - 1] := k;
            end;
            if (y < n) and (a[x, y + 1] = 0) then 
            begin
              w := y + 1;
              Plus(q, c, d, s, x, w);
              a[x, y + 1] := k;
            end;
            Dele(q, c, d, s);
          end;
      end;
  writeln(k);
end.