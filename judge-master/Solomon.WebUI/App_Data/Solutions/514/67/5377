#include <iostream>
#include <cmath>
#include <algorithm>
#include <vector>
using namespace std;
struct tt
{
	int s, t, c, i, e;
};
tt mas[100000];
int cnt[100000];
int used[100000];
bool cmp(tt a, tt b)
{
	if (a.s < b.s) return true;
	return false;
}
int n;
vector <int> mas2[100000];
void rec(int i,int  j,int  cnt2)
{
	used[i] = 1;
	cnt[j] += mas[i].c;
	mas2[j].push_back(mas[i].i);
	int fl = 0;
	long long pok = 10000000000;
	long long pok2 = -1;
	for (int k = i + 1; k < n; k++)
	{
		if (mas[k].s >= mas[i].e && mas[k].e < pok)
		{
			pok = mas[k].e;
			pok2 = k;
			fl++;
		}

	}
	if (fl == 0) return;
	rec(pok2, j, cnt2);
}
int main()
{

	cin >> n;
	for (int i = 0; i < n; i++)
	{
		cin >> mas[i].s >> mas[i].t >> mas[i].c;
		mas[i].e = mas[i].s + mas[i].t;
		mas[i].i = i + 1;
	}
	sort(mas, mas + n, cmp);
	for (int i = 0; i < n; i++)
	{
		if (used[i] != 1) rec(i, i, 0);
	}
	long long pok = -1;
	long long pok2 = -1;
	for (int i = 0; i < n; i++)
	{
		if (cnt[i] > pok)
		{
			pok = cnt[i];
			pok2 = i;
		}
	}
	cout << cnt[pok2] << "\n";
	cout << mas2[pok2].size() << "\n";
	for (int i = 0; i < mas2[pok2].size(); i++)
		cout << mas2[pok2][i] << ' ';
	return 0;
}