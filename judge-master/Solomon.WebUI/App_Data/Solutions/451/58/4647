const n=100;
type  massiv=array [1..n] of integer;
procedure Swap (var x, y: integer);
          var t: integer;
          begin
          t:=x;
          x:=y;
          y:=t;
          end;
procedure Sort (rm: integer; var m: massiv);
          var  i, j: integer;
          begin
          for j:=1 to rm-1 do
              for i:=1 to rm-j do
                  if m[i]<m[i+1] then swap(m[i],m[i+1]);
          end;
function Sravn (s1,s2: integer): boolean;
         begin
         Sravn:=(s1>s2);
         end;
procedure Dobav (i: integer; var k3, s3: integer; m: massiv; var m3: massiv);
          begin
          m3[k3]:=m[i];
          inc (s3, m[i]);
          inc (k3);
          end;


var       m: massiv;
          m1, m2: massiv;
          rm, s1, s2: integer;
          s,i, k1, k2: integer;
begin
 readln (rm);

for i:=1 to rm do
    begin
        read (m[i]);
    end;
Sort(rm,m);
m1[1]:=m[1]; m2[1]:=m[2];
s1:=m[1]; s2:=m[2];
k1:=2; k2:=2;
for i:=3 to rm do
    if Sravn(s1,s2) then Dobav(i,k2,s2,m,m2) else Dobav(i,k1,s1,m,m1);
    s:=0;
    for i:=1 to k1 do
    s:=s+m1[i];
         for i:=1 to k2 do
    s:=s-m2[i];
writeln(abs(s));

end.