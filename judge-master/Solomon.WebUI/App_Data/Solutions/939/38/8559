program sCheck;
label
 cSE;
var
 cC:array[1..4,1..2] of longint;
 cI,cO,sS,tS,sD,tD,cISA:longint;
 cIS:array[1..3] of longint;
 rA:string;
function gDistance (x1,y1,x2,y2:longint):longint;
 var
  kx,ky:longint;
 begin
  if ((y1>=0) and (y2>=0)) then ky:=abs(y1-y2)
   else if ((y1<=0) and (y2<=0)) then ky:=abs(abs(y1)+y2)
   else ky:=abs(y1)+abs(y2);
  if ((x1>=0) and (x2>=0)) then kx:=abs(x1-x2)
   else if ((x1<=0) and (x2<=0)) then kx:=abs(abs(x1)+x2)
   else kx:=abs(x1)+abs(x2);
  gDistance:=round(sqrt(sqr(ky)+sqr(kx)));
 end;
begin
 rA:='YES';
 for cI:=1 to 4 do for cO:=1 to 2 do readln(cC[cI,cO]);

 for cI:=1 to 4 do
  begin
   cISA:=1;
   for cO:=1 to 4 do
    begin
     if cI=cO then continue;
     cIS[cISA]:=gDistance(cC[cI,1],cC[cI,2],cC[cO,1],cC[cO,2]);
     cISA:=succ(cISA);
    end;
   if cI=1 then
    begin
     if (cIS[1]>=cIS[2]) and (cIS[1]>=cIS[3]) then sD:=cIS[1]
      else if (cIS[2]>=cIS[1]) and (cIS[2]>=cIS[3]) then sD:=cIS[2]
      else sD:=cIS[3];
     sS:=((cIS[1]+cIS[2]+cIS[3])-sD) div 2;
    end
   else
    begin
     if (cIS[1]>=cIS[2]) and (cIS[1]>=cIS[3]) then tD:=cIS[1]
      else if (cIS[2]>=cIS[1]) and (cIS[2]>=cIS[3]) then tD:=cIS[2]
      else tD:=cIS[3];
     tS:=((cIS[1]+cIS[2]+cIS[3])-sD) div 2;
     if (cIS[1]<>cIS[2]) and (cIS[2]<>cIS[3]) and (cIS[1]<>cIS[3]) then rA:='NO';
     if (tD<>sD) or (tS<>sS) then rA:='NO';
    end
  end;
 write(rA);
 readln;
end.